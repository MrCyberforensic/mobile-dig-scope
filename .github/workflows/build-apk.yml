name: Cloud Android APK Builder (No Local SDK Needed)

on:
  workflow_dispatch:

env:
  ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
  JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build web assets
        run: npm run build

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # --- install Android SDK ---
      - name: Install Android SDK
        run: |
          set -e
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmd.zip
          unzip -q cmd.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          yes | cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          echo "Android SDK installed"

      # --- create Android project if missing ---
      - name: Add Android platform (if missing)
        run: |
          if [ ! -d "android" ]; then
            echo "Creating new Android platform..."
            npx cap add android || true
          fi
          npx cap sync android

      # --- inject minimal Gradle build if still empty ---
      - name: Ensure Gradle build structure
        run: |
          cd android
          if [ ! -f settings.gradle ]; then
            echo "rootProject.name='app'" > settings.gradle
          fi
          if [ ! -f build.gradle ]; then
            cat > build.gradle <<'EOF'
buildscript {
    repositories { google(); mavenCentral() }
    dependencies { classpath 'com.android.tools.build:gradle:8.1.1' }
}
apply plugin: 'com.android.application'
android {
    compileSdkVersion 34
    defaultConfig {
        applicationId "com.example.app"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
    }
    buildTypes { release { minifyEnabled false } }
}
repositories { google(); mavenCentral() }
dependencies {}
EOF
          fi

      - name: Ensure Gradle wrapper
        run: |
          cd android
          if [ ! -f gradlew ]; then
            wget -q https://services.gradle.org/distributions/gradle-8.7-bin.zip -O /tmp/gradle.zip
            unzip -q /tmp/gradle.zip -d /tmp/
            PATH="/tmp/gradle-8.7/bin:$PATH"
            gradle wrapper --gradle-version 8.7
          fi
          chmod +x gradlew

      - name: Build APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
